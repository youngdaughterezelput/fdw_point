Тестирование конфигурации (test_load_save_config):
	Проверяет корректность загрузки параметров из .env файла
	Тестирует сохранение конфигурации
	Важность: Гарантирует, что настройки подключений и маппингов сохраняются правильно

Тестирование парсера SQL (test_parse_sql):
	Проверяет разбор простых запросов и запросов с JOIN
	Анализирует извлечение таблиц, алиасов и условий
	Важность: Корректный парсинг критичен для дальнейшей обработки запроса

Тест одного источника (test_execute_query_single_table):
	Проверяет выполнение запроса к одной таблице
	Контролирует формирование столбцов результата
	Важность: Базовый сценарий работы системы

Тест объединения данных (test_execute_query_join):
	Проверяет обработку JOIN через предопределенные правила
	Контролирует передачу параметров между запросами
	Важность: Основная функциональность федеративных запросов

Тест фильтрации (test_where_processing):
	Проверяет обработку условий WHERE
	Тестирует преобразование SQL-условий
	Важность: Корректная фильтрация критична для результатов

Тест обработки ошибок (test_error_handling):
	Проверяет реакцию системы на ошибки БД
	Контролирует формирование сообщений об ошибках
	Важность: Стабильность работы при проблемах с подключениями

-------------------------------------------------------------------------------------------------------------------------------
Что проверяет запуск теста:
Корректность работы с конфигурацией:
Система должна правильно сохранять и загружать настройки подключений и маппингов.

Парсинг сложных SQL-запросов:
Должны корректно обрабатываться JOIN, алиасы, условия WHERE.

Распределенное выполнение запросов:
Система должна:

	Определять источники данных
	Генерировать отдельные запросы
	Корректно объединять результаты

Работа с JOIN-правилами:
	Проверка применения предопределенных правил объединения данных.
	Обработка ошибок
	
Система должна корректно реагировать на:

	Ошибки подключений
	Отсутствие таблиц
	Некорректные SQL-запросы

Эффективность запросов
	Проверка передачи параметров между подзапросами (IN-условия) для оптимизации.

Тест обеспечивает проверку основной функциональности без реальных подключений к БД, используя моки для изоляции тестов и повышения скорости выполнения.